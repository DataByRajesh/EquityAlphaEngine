name: Build and deploy

# Builds the Docker image and deploys it to Amazon ECS.
# Required secrets:
#   AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY - IAM user credentials.
#   AWS_ACCOUNT_ID - Account that owns the ECR repository.
#   AWS_DEFAULT_REGION - AWS region (e.g. us-east-1).
#   ECR_REPOSITORY - ECR repository name.
#   ECS_CLUSTER - ECS cluster to update.
#   ECS_SERVICE - ECS service to update.

on:
  push:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}
      ECS_SERVICE: ${{ secrets.ECS_SERVICE }}
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build Docker image
        run: |
          IMAGE_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY
          docker build -t $IMAGE_URI:$IMAGE_TAG -t $IMAGE_URI:latest .
      - name: Push image to Amazon ECR
        run: |
          IMAGE_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY
          docker push $IMAGE_URI:$IMAGE_TAG
          docker push $IMAGE_URI:latest
      - name: Update ECS service
        run: |
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service $ECS_SERVICE \
            --force-new-deployment
